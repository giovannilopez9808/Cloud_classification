!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/amadeus/Proyects/Cloud_classification/Scripts/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	/p5.9.20210905.0/
GHI	get_clear_sky.py	/^GHI = model.run(params)$/;"	v
SIMA	Daily_graphics.py	/^SIMA = SIMA_model()$/;"	v
SIMA	get_clear_sky.py	/^SIMA = SIMA_model()$/;"	v
SIMA	get_differences_and_ratios.py	/^SIMA = SIMA_model()$/;"	v
SIMA_daily	Daily_graphics.py	/^    SIMA_daily = SIMA.get_data_date(date)$/;"	v
SIMA_daily	get_differences_and_ratios.py	/^    SIMA_daily = SIMA.get_data_date(date)$/;"	v
SIMA_daily	get_differences_and_ratios.py	/^    SIMA_daily = get_data_between_hours(SIMA_daily,$/;"	v
SIMA_model	Modules/data_model.py	/^class SIMA_model:$/;"	c
SMARTS	Daily_graphics.py	/^SMARTS = SMARTS_model()$/;"	v
SMARTS	get_differences_and_ratios.py	/^SMARTS = SMARTS_model()$/;"	v
SMARTS_daily	Daily_graphics.py	/^        SMARTS_daily = SMARTS.read(filename)$/;"	v
SMARTS_daily	Daily_graphics.py	/^        SMARTS_daily = hourly_mean(SMARTS_daily)$/;"	v
SMARTS_daily	get_differences_and_ratios.py	/^    SMARTS_daily = SMARTS.read(file)$/;"	v
SMARTS_daily	get_differences_and_ratios.py	/^    SMARTS_daily = hourly_mean(SMARTS_daily)$/;"	v
__init__	Modules/clear_sky.py	/^    def __init__(self) -> None:$/;"	m	class:clear_sky_model	typeref:typename:None
__init__	Modules/data_model.py	/^    def __init__(self) -> None:$/;"	m	class:SIMA_model	typeref:typename:None
__init__	Modules/extraterrestrial_solar.py	/^    def __init__(self) -> None:$/;"	m	class:extraterrestial_solar_model	typeref:typename:None
_get_datetime	Modules/clear_sky.py	/^    def _get_datetime(self,$/;"	m	class:clear_sky_model	typeref:typename:str
_get_day_and_hour	Modules/extraterrestrial_solar.py	/^    def _get_day_and_hour(self,$/;"	m	class:extraterrestial_solar_model	typeref:typename:tuple
_get_declination_angle	Modules/extraterrestrial_solar.py	/^    def _get_declination_angle(self,$/;"	m	class:extraterrestial_solar_model	typeref:typename:float
_get_eccentricity_correction	Modules/extraterrestrial_solar.py	/^    def _get_eccentricity_correction(self,$/;"	m	class:extraterrestial_solar_model	typeref:typename:float
_get_gamma	Modules/extraterrestrial_solar.py	/^    def _get_gamma(self,$/;"	m	class:extraterrestial_solar_model	typeref:typename:float
_get_hour	Modules/clear_sky.py	/^    def _get_hour(self, minutes: int) -> str:$/;"	m	class:clear_sky_model	typeref:typename:str
_get_hour_correction	Modules/extraterrestrial_solar.py	/^    def _get_hour_correction(self,$/;"	m	class:extraterrestial_solar_model	typeref:typename:float
_get_hour_from_datetime	Modules/extraterrestrial_solar.py	/^    def _get_hour_from_datetime(self,$/;"	m	class:extraterrestial_solar_model	typeref:typename:float
_get_minute	Modules/clear_sky.py	/^    def _get_minute(self, minutes: int) -> str:$/;"	m	class:clear_sky_model	typeref:typename:str
_get_offset	Modules/extraterrestrial_solar.py	/^    def _get_offset(self,$/;"	m	class:extraterrestial_solar_model	typeref:typename:float
_get_solar_hour_angle	Modules/extraterrestrial_solar.py	/^    def _get_solar_hour_angle(self,$/;"	m	class:extraterrestial_solar_model	typeref:typename:float
_get_time	Modules/clear_sky.py	/^    def _get_time(self, minutes: int) -> str:$/;"	m	class:clear_sky_model	typeref:typename:str
bar	Count_data.py	/^bar = tqdm(files)$/;"	v
bar	Daily_graphics.py	/^bar = tqdm(data.index)$/;"	v
bar	get_differences_and_ratios.py	/^bar = tqdm(classification.index)$/;"	v
classification	get_differences_and_ratios.py	/^classification = read_csv(filename,$/;"	v
clear_sky_model	Modules/clear_sky.py	/^class clear_sky_model:$/;"	c
columns	Count_data.py	/^    columns = [(station, value)$/;"	v
columns	Count_data.py	/^    columns = data.columns$/;"	v
columns	organize_2021_data.py	/^    columns = list(results.columns)$/;"	v
comparison	get_differences_and_ratios.py	/^    comparison = comparison_operation(SIMA_daily,$/;"	v
comparison_operation	get_differences_and_ratios.py	/^def comparison_operation(measurement: DataFrame, model: DataFrame, operation: str) -> DataFrame:$/;"	f	typeref:typename:DataFrame
data	Count_data.py	/^    data = data >= params["Minimum data per day"]$/;"	v
data	Count_data.py	/^    data = data >= params["Minimum data per month"]$/;"	v
data	Count_data.py	/^    data = data.resample("D").count()$/;"	v
data	Count_data.py	/^    data = data.resample("MS").sum()$/;"	v
data	Count_data.py	/^    data = data.sum()$/;"	v
data	Count_data.py	/^    data = data[columns]$/;"	v
data	Count_data.py	/^    data = data[data.index.hour <= 19]$/;"	v
data	Count_data.py	/^    data = data[data.index.hour >= 8]$/;"	v
data	Count_data.py	/^    data = read_csv(filename,$/;"	v
data	Daily_graphics.py	/^data = read_csv(filename)$/;"	v
data	get_clear_sky.py	/^data = SIMA.get_data_date(params["date"])$/;"	v
data	organize_2021_data.py	/^        data = data_format(data)$/;"	v
data	organize_2021_data.py	/^        data = read_csv(file)$/;"	v
data	test_pvlib.py	/^data = data.get_data_date(params["Date"])$/;"	v
data	test_pvlib.py	/^data = data_model()$/;"	v
data_format	organize_2021_data.py	/^def data_format(data: DataFrame) -> DataFrame:$/;"	f	typeref:typename:DataFrame
date	Daily_graphics.py	/^    date = data["Fecha"][index]$/;"	v
date	get_differences_and_ratios.py	/^    date = date.date()$/;"	v
date_format	organize_2021_data.py	/^def date_format(date: str) -> str:$/;"	f	typeref:typename:str
dates	make_template_classification.py	/^dates = [file.split(".")[0]$/;"	v
extraterrestial_solar_model	Modules/extraterrestrial_solar.py	/^class extraterrestial_solar_model:$/;"	c
file	get_differences_and_ratios.py	/^        file = f"{year}.csv"$/;"	v
file	get_differences_and_ratios.py	/^        file = join(params["path data"],$/;"	v
file	get_differences_and_ratios.py	/^    file = f"{file}.txt"$/;"	v
file	get_differences_and_ratios.py	/^    file = join(params["path SMARTS data"],$/;"	v
file	get_differences_and_ratios.py	/^    file = yyyy_mm_dd2yymmdd(date)$/;"	v
filename	Count_data.py	/^    filename = join(params["path data"],$/;"	v
filename	Count_data.py	/^filename = join(params["path results"],$/;"	v
filename	Daily_graphics.py	/^        filename = f"{data['Date'][index]}.txt"$/;"	v
filename	Daily_graphics.py	/^        filename = f"{year}.csv"$/;"	v
filename	Daily_graphics.py	/^        filename = join(params["path SIMA data"],$/;"	v
filename	Daily_graphics.py	/^        filename = join(params["path station data"],$/;"	v
filename	Daily_graphics.py	/^filename = join(params["path station data"],$/;"	v
filename	get_clear_sky.py	/^filename = join(params["path data"],$/;"	v
filename	get_differences_and_ratios.py	/^filename = join(params["path SMARTS data"],$/;"	v
filename	get_differences_and_ratios.py	/^filename = join(params["path results"],$/;"	v
filename	make_template_classification.py	/^filename = join(params["path SMARTS data"],$/;"	v
filename	test_pvlib.py	/^filename = join(params["path data"],$/;"	v
files	Count_data.py	/^files = sorted(ls(params["path data"]))$/;"	v
files	make_template_classification.py	/^files = ls(path)$/;"	v
files	organize_2021_data.py	/^    files = [file$/;"	v
files	organize_2021_data.py	/^    files = sorted(ls())$/;"	v
fill_number	Modules/functions.py	/^def fill_number(number: int,$/;"	f	typeref:typename:str
get_H0	Modules/extraterrestrial_solar.py	/^    def get_H0(self,$/;"	m	class:extraterrestial_solar_model	typeref:typename:float
get_data_between_hours	get_differences_and_ratios.py	/^def get_data_between_hours(data: DataFrame, params: dict) -> DataFrame:$/;"	f	typeref:typename:DataFrame
get_data_date	Modules/data_model.py	/^    def get_data_date(self,$/;"	m	class:SIMA_model	typeref:typename:DataFrame
get_parameter_name	organize_2021_data.py	/^def get_parameter_name(file: str) -> str:$/;"	f	typeref:typename:str
get_params	Modules/params.py	/^def get_params() -> dict:$/;"	f	typeref:typename:dict
get_station_data	Modules/data_model.py	/^    def get_station_data(self,$/;"	m	class:SIMA_model	typeref:typename:DataFrame
hourly_mean	Modules/functions.py	/^def hourly_mean(data: DataFrame) -> DataFrame:$/;"	f	typeref:typename:DataFrame
location	test_pvlib.py	/^location = Location($/;"	v
ls	Count_data.py	/^from os import listdir as ls$/;"	x	nameref:unknown:listdir
ls	Modules/functions.py	/^def ls(path: str) -> list:$/;"	f	typeref:typename:list
ls	organize_2021_data.py	/^from os import listdir as ls$/;"	x	nameref:unknown:listdir
model	get_clear_sky.py	/^model = clear_sky_model()$/;"	v
model	test_pvlib.py	/^model = location.get_clearsky($/;"	v
montly	Count_data.py	/^        montly = data.loc[(station, value)]$/;"	v
n_null	Daily_graphics.py	/^    n_null = int(SIMA_daily.isnull().sum())$/;"	v
parameter	organize_2021_data.py	/^        parameter = get_parameter_name(file)$/;"	v
parameters	organize_2021_data.py	/^    parameters = DataFrame(parameters,$/;"	v
parameters	organize_2021_data.py	/^    parameters = [[column[1]$/;"	v
params	Count_data.py	/^params = {$/;"	v
params	Daily_graphics.py	/^params = get_params()$/;"	v
params	get_clear_sky.py	/^params = get_params()$/;"	v
params	get_differences_and_ratios.py	/^params = get_params()$/;"	v
params	make_template_classification.py	/^params = get_params()$/;"	v
params	test_pvlib.py	/^params = {$/;"	v
path	make_template_classification.py	/^path = join(params["path graphics"],$/;"	v
plot	Daily_graphics.py	/^def plot(SMARTS: DataFrame, SIMA: DataFrame, params: dict) -> None:$/;"	f	typeref:typename:None
plt	Daily_graphics.py	/^import matplotlib.pyplot as plt$/;"	I	nameref:module:matplotlib.pyplot
plt	get_clear_sky.py	/^import matplotlib.pyplot as plt$/;"	I	nameref:module:matplotlib.pyplot
plt	get_differences_and_ratios.py	/^import matplotlib.pyplot as plt$/;"	I	nameref:module:matplotlib.pyplot
plt	test_pvlib.py	/^import matplotlib.pyplot as plt$/;"	I	nameref:module:matplotlib.pyplot
read	Modules/data_model.py	/^    def read(self,$/;"	m	class:SIMA_model	typeref:typename:DataFrame
results	Count_data.py	/^results = DataFrame(results)$/;"	v
results	Count_data.py	/^results = dict()$/;"	v
results	Count_data.py	/^results = results.T$/;"	v
results	get_differences_and_ratios.py	/^    results = concat([results, comparison[0]],$/;"	v
results	get_differences_and_ratios.py	/^results = DataFrame()$/;"	v
results	organize_2021_data.py	/^        results = concat($/;"	v
results	organize_2021_data.py	/^    results = DataFrame()$/;"	v
results	organize_2021_data.py	/^    results = concat([parameters,$/;"	v
results	organize_2021_data.py	/^    results = concat([stations,$/;"	v
results	organize_2021_data.py	/^    results = results[columns]$/;"	v
results	test_pvlib.py	/^results = model.groupby(model.index.hour).mean()$/;"	v
run	Modules/clear_sky.py	/^    def run(self, params: dict) -> DataFrame:$/;"	m	class:clear_sky_model	typeref:typename:DataFrame
stations	organize_2021_data.py	/^    stations = DataFrame(stations,$/;"	v
stations	organize_2021_data.py	/^    stations = [[column[0]$/;"	v
stations	organize_2021_data.py	/^stations = {$/;"	v
template	make_template_classification.py	/^template = DataFrame(dates,$/;"	v
times	test_pvlib.py	/^times = date_range($/;"	v
year	Count_data.py	/^    year = file.split(".")[0]$/;"	v
year	Daily_graphics.py	/^        year = data["year"][index]$/;"	v
year	Daily_graphics.py	/^year = ""$/;"	v
year	get_differences_and_ratios.py	/^        year = date.year$/;"	v
year	get_differences_and_ratios.py	/^year = ""$/;"	v
yymmdd2yyyy_mm_dd	Modules/functions.py	/^def yymmdd2yyyy_mm_dd(date: int) -> str:$/;"	f	typeref:typename:str
yyyy_mm_dd2yymmdd	Modules/functions.py	/^def yyyy_mm_dd2yymmdd(date: Timestamp) -> str:$/;"	f	typeref:typename:str
