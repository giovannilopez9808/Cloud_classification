c-1-38
Tue 05 Jul 2022 07:10:59 PM CDT
----------------------------------------
Sky model: RS	Operation: ratio
----------------------------------------
Sky model: RS	Operation: diff
Traceback (most recent call last):
  File "/home/est_posgrado_giovanni.lopez/Cloud_classification/Scripts/classification_model.py", line 46, in <module>
    model.run(dataset.train)
  File "/home/est_posgrado_giovanni.lopez/Cloud_classification/Scripts/Modules/classification_classic_models.py", line 36, in run
    self.model.run(data,
  File "/home/est_posgrado_giovanni.lopez/Cloud_classification/Scripts/Modules/classification_classic_models.py", line 54, in run
    self.model.fit(vectors,
  File "/home/est_posgrado_giovanni.lopez/.conda/envs/tensorflow/lib/python3.10/site-packages/sklearn/svm/_base.py", line 173, in fit
    X, y = self._validate_data(
  File "/home/est_posgrado_giovanni.lopez/.conda/envs/tensorflow/lib/python3.10/site-packages/sklearn/base.py", line 596, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/home/est_posgrado_giovanni.lopez/.conda/envs/tensorflow/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1074, in check_X_y
    X = check_array(
  File "/home/est_posgrado_giovanni.lopez/.conda/envs/tensorflow/lib/python3.10/site-packages/sklearn/utils/validation.py", line 899, in check_array
    _assert_all_finite(
  File "/home/est_posgrado_giovanni.lopez/.conda/envs/tensorflow/lib/python3.10/site-packages/sklearn/utils/validation.py", line 146, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
----------------------------------------
Sky model: RS	Operation: ratio
----------------------------------------
Sky model: RS	Operation: diff
Traceback (most recent call last):
  File "/home/est_posgrado_giovanni.lopez/Cloud_classification/Scripts/classification_model.py", line 46, in <module>
    model.run(dataset.train)
  File "/home/est_posgrado_giovanni.lopez/Cloud_classification/Scripts/Modules/classification_classic_models.py", line 36, in run
    self.model.run(data,
  File "/home/est_posgrado_giovanni.lopez/Cloud_classification/Scripts/Modules/classification_classic_models.py", line 73, in run
    self.model.fit(vectors,
  File "/home/est_posgrado_giovanni.lopez/.conda/envs/tensorflow/lib/python3.10/site-packages/sklearn/neighbors/_regression.py", line 203, in fit
    return self._fit(X, y)
  File "/home/est_posgrado_giovanni.lopez/.conda/envs/tensorflow/lib/python3.10/site-packages/sklearn/neighbors/_base.py", line 407, in _fit
    X, y = self._validate_data(
  File "/home/est_posgrado_giovanni.lopez/.conda/envs/tensorflow/lib/python3.10/site-packages/sklearn/base.py", line 596, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/home/est_posgrado_giovanni.lopez/.conda/envs/tensorflow/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1074, in check_X_y
    X = check_array(
  File "/home/est_posgrado_giovanni.lopez/.conda/envs/tensorflow/lib/python3.10/site-packages/sklearn/utils/validation.py", line 899, in check_array
    _assert_all_finite(
  File "/home/est_posgrado_giovanni.lopez/.conda/envs/tensorflow/lib/python3.10/site-packages/sklearn/utils/validation.py", line 146, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
KNeighborsRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
----------------------------------------
Sky model: RS	Operation: ratio
----------------------------------------
Sky model: RS	Operation: diff
Traceback (most recent call last):
  File "/home/est_posgrado_giovanni.lopez/Cloud_classification/Scripts/classification_model.py", line 46, in <module>
    model.run(dataset.train)
  File "/home/est_posgrado_giovanni.lopez/Cloud_classification/Scripts/Modules/classification_classic_models.py", line 36, in run
    self.model.run(data,
  File "/home/est_posgrado_giovanni.lopez/Cloud_classification/Scripts/Modules/classification_classic_models.py", line 93, in run
    self.model.fit(vectors,
  File "/home/est_posgrado_giovanni.lopez/.conda/envs/tensorflow/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 331, in fit
    X, y = self._validate_data(
  File "/home/est_posgrado_giovanni.lopez/.conda/envs/tensorflow/lib/python3.10/site-packages/sklearn/base.py", line 596, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/home/est_posgrado_giovanni.lopez/.conda/envs/tensorflow/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1074, in check_X_y
    X = check_array(
  File "/home/est_posgrado_giovanni.lopez/.conda/envs/tensorflow/lib/python3.10/site-packages/sklearn/utils/validation.py", line 899, in check_array
    _assert_all_finite(
  File "/home/est_posgrado_giovanni.lopez/.conda/envs/tensorflow/lib/python3.10/site-packages/sklearn/utils/validation.py", line 146, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
RandomForestClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
----------------------------------------
Sky model: RS	Operation: ratio
----------------------------------------
Sky model: RS	Operation: diff
Traceback (most recent call last):
  File "/home/est_posgrado_giovanni.lopez/Cloud_classification/Scripts/classification_model.py", line 46, in <module>
    model.run(dataset.train)
  File "/home/est_posgrado_giovanni.lopez/Cloud_classification/Scripts/Modules/classification_classic_models.py", line 36, in run
    self.model.run(data,
  File "/home/est_posgrado_giovanni.lopez/Cloud_classification/Scripts/Modules/classification_classic_models.py", line 112, in run
    self.model.fit(vectors,
  File "/home/est_posgrado_giovanni.lopez/.conda/envs/tensorflow/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 243, in fit
    return self._partial_fit(
  File "/home/est_posgrado_giovanni.lopez/.conda/envs/tensorflow/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 400, in _partial_fit
    X, y = self._validate_data(X, y, reset=first_call)
  File "/home/est_posgrado_giovanni.lopez/.conda/envs/tensorflow/lib/python3.10/site-packages/sklearn/base.py", line 596, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/home/est_posgrado_giovanni.lopez/.conda/envs/tensorflow/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1074, in check_X_y
    X = check_array(
  File "/home/est_posgrado_giovanni.lopez/.conda/envs/tensorflow/lib/python3.10/site-packages/sklearn/utils/validation.py", line 899, in check_array
    _assert_all_finite(
  File "/home/est_posgrado_giovanni.lopez/.conda/envs/tensorflow/lib/python3.10/site-packages/sklearn/utils/validation.py", line 146, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
GaussianNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
----------------------------------------
Sky model: RS	Operation: ratio
----------------------------------------
Sky model: RS	Operation: diff
Traceback (most recent call last):
  File "/home/est_posgrado_giovanni.lopez/Cloud_classification/Scripts/classification_model.py", line 46, in <module>
    model.run(dataset.train)
  File "/home/est_posgrado_giovanni.lopez/Cloud_classification/Scripts/Modules/classification_classic_models.py", line 36, in run
    self.model.run(data,
  File "/home/est_posgrado_giovanni.lopez/Cloud_classification/Scripts/Modules/classification_classic_models.py", line 131, in run
    self.model.fit(vectors,
  File "/home/est_posgrado_giovanni.lopez/.conda/envs/tensorflow/lib/python3.10/site-packages/sklearn/tree/_classes.py", line 969, in fit
    super().fit(
  File "/home/est_posgrado_giovanni.lopez/.conda/envs/tensorflow/lib/python3.10/site-packages/sklearn/tree/_classes.py", line 172, in fit
    X, y = self._validate_data(
  File "/home/est_posgrado_giovanni.lopez/.conda/envs/tensorflow/lib/python3.10/site-packages/sklearn/base.py", line 591, in _validate_data
    X = check_array(X, input_name="X", **check_X_params)
  File "/home/est_posgrado_giovanni.lopez/.conda/envs/tensorflow/lib/python3.10/site-packages/sklearn/utils/validation.py", line 899, in check_array
    _assert_all_finite(
  File "/home/est_posgrado_giovanni.lopez/.conda/envs/tensorflow/lib/python3.10/site-packages/sklearn/utils/validation.py", line 146, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
DecisionTreeClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
Tue 05 Jul 2022 07:12:16 PM CDT
